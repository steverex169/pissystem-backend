# Generated by Django 5.0.7 on 2024-09-05 09:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('databaseadmin', '0001_initial'),
        ('labowner', '0001_initial'),
        ('organizationdata', '__first__'),
        ('staff', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='lab',
            name='marketer_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.marketer', verbose_name='Marketer'),
        ),
        migrations.AddField(
            model_name='lab',
            name='organization_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organizationdata.organization'),
        ),
        migrations.AddField(
            model_name='lab',
            name='staff_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.staff'),
        ),
        migrations.AddField(
            model_name='labcorporate',
            name='lab_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labowner.lab', verbose_name='Lab name'),
        ),
        migrations.AddField(
            model_name='labpayment',
            name='lab_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labowner.lab', verbose_name='Lab'),
        ),
        migrations.AddField(
            model_name='pathologist',
            name='lab_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labowner.lab', verbose_name='Lab name'),
        ),
        migrations.AddField(
            model_name='result',
            name='analyte',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='databaseadmin.analyte', verbose_name='Analyte'),
        ),
        migrations.AddField(
            model_name='result',
            name='instrument',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='databaseadmin.instrument', verbose_name='Instrument'),
        ),
        migrations.AddField(
            model_name='result',
            name='lab_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labowner.lab', verbose_name='Lab'),
        ),
        migrations.AddField(
            model_name='result',
            name='method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='databaseadmin.method', verbose_name='Method'),
        ),
        migrations.AddField(
            model_name='result',
            name='organization_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organizationdata.organization'),
        ),
        migrations.AddField(
            model_name='result',
            name='reagents',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='databaseadmin.reagents', verbose_name='Reagents'),
        ),
        migrations.AddField(
            model_name='result',
            name='units',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='databaseadmin.units', verbose_name='Units'),
        ),
        migrations.AddField(
            model_name='samplecollector',
            name='account_id',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='samplecollector',
            name='lab_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labowner.lab', verbose_name='Lab name'),
        ),
    ]
